/**
 * @file form.js
 * @description –õ–æ–≥–∏–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã: —Ä–∞—Å—á–µ—Ç—ã, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–µ–≤—å—é, –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö.
 */

/**
 * –ó–∞–ø–æ–ª–Ω—è–µ—Ç –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏ (—Ç–µ—Ö–Ω–∏–∫–∞, –ø—Ä–∏—Ü–µ–ø—ã) –¥–∞–Ω–Ω—ã–º–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞.
 * @param {object} data - –û–±—ä–µ–∫—Ç —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ { tech: [...], trailer: [...] }.
 */
function populateLists(data) {
    const tSel = document.getElementById('techSelect');
    const trSel = document.getElementById('trailerSelect');
    
    tSel.innerHTML = '<option value="">‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É ‚Äî</option>';
    (data && data.tech || []).forEach(x => { 
        const o = document.createElement('option'); 
        o.value = x; 
        o.text = x; 
        tSel.appendChild(o); 
    });
    
    trSel.innerHTML = '<option value="">‚Äî –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—Ü–µ–ø ‚Äî</option>';
    (data && data.trailer || []).forEach(x => { 
        const o = document.createElement('option'); 
        o.value = x; 
        o.text = x; 
        trSel.appendChild(o); 
    });
    
    loadDraft(); // –ó–∞–≥—Ä—É–∂–∞–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —Å–ø–∏—Å–∫–∏ –≥–æ—Ç–æ–≤—ã
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏.
 * @param {string} startTime - –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "HH:mm".
 * @param {string} endTime - –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "HH:mm".
 * @returns {string} - –í—Ä–µ–º—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "H:mm".
 */
function calcOvertime(startTime, endTime) {
    if (!startTime || !endTime) return '0:00';
    const [sh, sm] = startTime.split(':').map(Number);
    const [eh, em] = endTime.split(':').map(Number);
    let start = sh * 60 + sm;
    let end = eh * 60 + em;
    if (end < start) end += 24 * 60; // –£—á–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å
    const duration = end - start;
    const rawOvertimeMinutes = Math.max(0, duration - 12 * 60); // –ë–æ–ª–µ–µ 12 —á–∞—Å–æ–≤
    const overtimeMinutes = Math.round(rawOvertimeMinutes / 15) * 15; // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ 15 –º–∏–Ω
    const h = Math.floor(overtimeMinutes / 60);
    const m = overtimeMinutes % 60;
    return `${h}:${m.toString().padStart(2, '0')}`;
}

/**
 * –ì–æ—Ç–æ–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–µ–≤—å—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ.
 */
function preparePreview() {
    let reason = null;
    if (_EDIT_MODE_DATA) {
        reason = prompt("–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (max 50 —Å–∏–º–≤–æ–ª–æ–≤):", "");
        if (!reason || reason.trim() === "") {
            alert("–ü—Ä–∏—á–∏–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Ç–º–µ–Ω–∞.");
            return;
        }
        reason = reason.trim().substring(0, 50);
    }

    const driverName = localStorage.getItem('driverName') || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    const date = document.getElementById('date').value;
    let formattedDate = date;
    try {
        const parts = date.split('-');
        formattedDate = `${parts[2]}.${parts[1]}.${parts[0].slice(-2)}`;
    } catch (e) {
        formattedDate = date;
    }
    const project = document.getElementById('project').value;
    const tech = document.getElementById('techSelect').value;
    const address = document.getElementById('address').value;
    const shiftStart = document.getElementById('shiftStart').value;
    const shiftEnd = document.getElementById('shiftEnd').value;
    const isTrailerVisible = document.getElementById('trailerBlock').style.display === 'block';
    const isKmVisible = document.getElementById('kmBlock').style.display === 'block';
    const isCommentVisible = document.getElementById('commentBlock').style.display === 'block';
    const comment = isCommentVisible ? document.getElementById('comment').value.trim() : '';
    const trailer = isTrailerVisible ? document.getElementById('trailerSelect').value : '';
    const km = isKmVisible ? (document.getElementById('km').value || 0) : 0;
    const customTrailerTime = document.getElementById('trailerTimeInputs').style.display === 'block';
    const trailerStart = (isTrailerVisible && customTrailerTime) ? document.getElementById('trailerStart').value : (isTrailerVisible ? shiftStart : '');
    const trailerEnd = (isTrailerVisible && customTrailerTime) ? document.getElementById('trailerEnd').value : (isTrailerVisible ? shiftEnd : '');

    if (isTrailerVisible && !trailer) { alert('–í—ã –¥–æ–±–∞–≤–∏–ª–∏ –±–ª–æ–∫ "–ü—Ä–∏—Ü–µ–ø", –Ω–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–∏—Ü–µ–ø –∏–∑ —Å–ø–∏—Å–∫–∞.'); return; }
    if (isTrailerVisible && customTrailerTime && (!trailerStart || !trailerEnd)) { alert('–í—ã —É–∫–∞–∑–∞–ª–∏, —á—Ç–æ –≤—Ä–µ–º—è –ø—Ä–∏—Ü–µ–ø–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø–æ–ª—è "–ù–∞—á–∞–ª–æ / –ö–æ–Ω–µ—Ü" –¥–ª—è –Ω–µ–≥–æ.'); return; }

    const overtime = calcOvertime(shiftStart, shiftEnd);
    const trailerOvertime = (isTrailerVisible && trailer) ? calcOvertime(trailerStart, trailerEnd) : '0:00';

    let previewItems = [
        `üóì ${formattedDate}`, `–í–æ–¥–∏—Ç–µ–ª—å: ${driverName}`, `–ü—Ä–æ–µ–∫—Ç: ${project}`,
        `–¢–µ—Ö–Ω–∏–∫–∞: ${tech || '-'}`, trailer ? `–ü—Ä–∏—Ü–µ–ø: ${trailer}` : `–ü—Ä–∏—Ü–µ–ø: –Ω–µ—Ç`,
        `–ê–¥—Ä–µ—Å: ${address}`, `–°–º–µ–Ω–∞: ${shiftStart} ‚Äî ${shiftEnd} (–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞: ${overtime})`,
        trailer ? `–°–º–µ–Ω–∞ –ø—Ä–∏—Ü–µ–ø–∞: ${trailerStart} ‚Äî ${trailerEnd} (–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞: ${trailerOvertime})` : '',
        (km > 0) ? `–ü–µ—Ä–µ–ø—Ä–æ–±–µ–≥: ${km} –∫–º` : `–ü–µ—Ä–µ–ø—Ä–æ–±–µ–≥: 0 –∫–º`,
        (comment) ? `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}` : ''
    ];

    if (_EDIT_MODE_DATA) {
        previewItems.push(`\n‚ùóÔ∏è –ü–†–ò–ß–ò–ù–ê –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø:\n${reason}`);
    }

    document.getElementById('modalPreviewText').innerText = previewItems.filter(Boolean).join('\n');

    _REPORT = {
        date: date, driverName, tgId: _TG_ID, tgUsername: _TG_USERNAME, project, tech,
        trailer: trailer || '–ù–µ—Ç –ø—Ä–∏—Ü–µ–ø–∞', address,
        shiftStart, shiftEnd, overtime,
        trailerStart: trailerStart || '', trailerEnd: trailerEnd || '', trailerOvertime,
        km, comment: comment || '',
        accessMethod: _ACCESS_METHOD
    };
    
    if (_EDIT_MODE_DATA) {
        _REPORT.isEdit = true;
        _REPORT.reason = reason;
        _REPORT.oldRowNumber = _EDIT_MODE_DATA.rowNumber;
        _REPORT.oldMessageId = _EDIT_MODE_DATA.messageId;
    } else {
        _REPORT.isEdit = false;
    }

    document.getElementById('modalPreview').style.display = 'flex';
    document.getElementById('sendBtn').disabled = false;
    document.getElementById('editBtn').disabled = false;
    document.getElementById('sendBtn').innerText = _EDIT_MODE_DATA ? '–û—Ç–ø—Ä–∞–≤–∏—Ç—å (–†–µ–¥–∞–∫—Ç.)' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç';
}

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
 */
function sendReport() {
    document.getElementById('sendBtn').disabled = true;
    document.getElementById('editBtn').disabled = true;
    document.getElementById('sendBtn').innerText = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

    const successCallback = (resp) => {
        if (resp && resp.status === 'ok') {
            saveProjectHistory(_REPORT.project);
            localStorage.removeItem(DRAFT_KEY);
            cancelEdit(false);
            tg.close();
        } else {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ' + JSON.stringify(resp));
            resetSendButton();
        }
    };

    const errorCallback = (err) => {
        alert('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ' + (err.message || err.toString()));
        resetSendButton();
    };

    if (_REPORT.isEdit) {
        const payload = {
            oldRowNumber: _REPORT.oldRowNumber,
            oldMessageId: _REPORT.oldMessageId,
            reason: _REPORT.reason,
            reportData: _REPORT
        };
        callApi('submitEdit', payload, successCallback, errorCallback);
    } else {
        callApi('submitReport', _REPORT, successCallback, errorCallback);
    }
}


/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã.
 */
function setupFormEventListeners() {
    document.getElementById('sendBtn').addEventListener('click', sendReport);

    document.getElementById('addTrailerBtn').addEventListener('click', () => { showOptionalBlock('trailerBlock', 'addTrailerBtn'); saveDraft(); });
    document.getElementById('addKmBtn').addEventListener('click', () => { showOptionalBlock('kmBlock', 'addKmBtn'); saveDraft(); });
    document.getElementById('addCommentBtn').addEventListener('click', () => { showOptionalBlock('commentBlock', 'addCommentBtn'); saveDraft(); });
    
    document.getElementById('toggleTrailerTimeBtn').addEventListener('click', () => { 
      showOptionalBlock('trailerTimeInputs', 'toggleTrailerTimeBtn', true);
      if (!document.getElementById('trailerStart').value) document.getElementById('trailerStart').value = document.getElementById('shiftStart').value;
      if (!document.getElementById('trailerEnd').value) document.getElementById('trailerEnd').value = document.getElementById('shiftEnd').value;
      saveDraft(); 
    });
}
